- add something to make a memory image, useful in some cases, eg. making very
  large image mosaics

- support vips_flatten(), see 

	https://github.com/jcupitt/ruby-vips/issues/45


btw, there's a method called to_memory in JPEGWriter and PNGWriter, that works
cool to retrieve the VIPS::Image as a memory buffer, will be cool if this
method is moved up to Writer and then it handles the correct to_memory method
using the image headers.

add from_memory? or should the open method accept a blob in place of a path?




TODO
* Verify that all memory gets released when vips ops return errors. Namely,
  make sure that the allocated IMAGEs get released via ruby's free callbacks.
* Allow for injecting ruby code into an image transformation pipeline (may be
  slow to call out to ruby with every read, but may be worthwhile for fun custom
  image processors).
* Tap into VIPS callback system to allow progress updates, etc.
* Allow for creating a ruby endpoint to the pipeline could be useful for
  streaming.
* Image#to_a
* look into other.h, audit all libvips methods and make sure they are all
  implemented
* JRuby support
* Optional extensions to core Ruby classes, allowing operations such as
  [1, 2, 3] & im . This could be optionally enabled by requiring e.g.
  vips/core_ext
* Put groups of image operations into modules, breaking docs into themes and
  possibly allowing for selective loading of image ops.
